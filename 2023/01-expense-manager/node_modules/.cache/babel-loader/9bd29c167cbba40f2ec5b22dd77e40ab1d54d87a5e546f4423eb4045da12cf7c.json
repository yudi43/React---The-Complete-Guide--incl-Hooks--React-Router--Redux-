{"ast":null,"code":"var _jsxFileName = \"/Users/yudi/Desktop/React---The-Complete-Guide--incl-Hooks--React-Router--Redux-/2023/01-expense-manager/src/components/Expenses/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesChart(props) {\n  const chartDataPoints = [{\n    label: \"jan\",\n    value: 0\n  }, {\n    label: \"feb\",\n    value: 0\n  }, {\n    label: \"mar\",\n    value: 0\n  }, {\n    label: \"apr\",\n    value: 0\n  }, {\n    label: \"may\",\n    value: 0\n  }, {\n    label: \"jun\",\n    value: 0\n  }, {\n    label: \"jul\",\n    value: 0\n  }, {\n    label: \"aug\",\n    value: 0\n  }, {\n    label: \"sep\",\n    value: 0\n  }, {\n    label: \"oct\",\n    value: 0\n  }, {\n    label: \"nov\",\n    value: 0\n  }, {\n    label: \"dec\",\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // jan is 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n    console.log(chartDataPoints);\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","console","log","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yudi/Desktop/React---The-Complete-Guide--incl-Hooks--React-Router--Redux-/2023/01-expense-manager/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: \"jan\", value: 0 },\n    { label: \"feb\", value: 0 },\n    { label: \"mar\", value: 0 },\n    { label: \"apr\", value: 0 },\n    { label: \"may\", value: 0 },\n    { label: \"jun\", value: 0 },\n    { label: \"jul\", value: 0 },\n    { label: \"aug\", value: 0 },\n    { label: \"sep\", value: 0 },\n    { label: \"oct\", value: 0 },\n    { label: \"nov\", value: 0 },\n    { label: \"dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // jan is 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n    console.log(chartDataPoints);\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n}\n\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;IACrDC,OAAO,CAACC,GAAG,CAACV,eAAe,CAAC;EAC9B;EAEA,oBAAOH,OAAA,CAACF,KAAK;IAACgB,UAAU,EAAEX;EAAgB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C;AAACC,EAAA,GAvBQlB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}