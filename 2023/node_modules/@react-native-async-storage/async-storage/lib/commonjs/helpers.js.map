{"version":3,"names":["checkValidArgs","keyValuePairs","callback","Array","isArray","length","Error","checkValidInput","_len","arguments","input","_key","key","value","console","warn","convertError","error","out","message","convertErrors","errs","errors","ensureArray","map","e"],"sources":["helpers.ts"],"sourcesContent":["import type { ErrorLike } from './types';\n\nexport function checkValidArgs(keyValuePairs: unknown[], callback: unknown) {\n  if (\n    !Array.isArray(keyValuePairs) ||\n    keyValuePairs.length === 0 ||\n    !Array.isArray(keyValuePairs[0])\n  ) {\n    throw new Error(\n      '[AsyncStorage] Expected array of key-value pairs as first argument to multiSet'\n    );\n  }\n\n  if (callback && typeof callback !== 'function') {\n    if (Array.isArray(callback)) {\n      throw new Error(\n        '[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?'\n      );\n    }\n\n    throw new Error(\n      '[AsyncStorage] Expected function as second argument to multiSet'\n    );\n  }\n}\n\nexport function checkValidInput(...input: unknown[]) {\n  const [key, value] = input;\n\n  if (typeof key !== 'string') {\n    console.warn(\n      `[AsyncStorage] Using ${typeof key} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${key}\\n`\n    );\n  }\n\n  if (input.length > 1 && typeof value !== 'string') {\n    if (value == null) {\n      throw new Error(\n        `[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    } else {\n      console.warn(\n        `[AsyncStorage] The value for key \"${key}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    }\n  }\n}\n\nexport function convertError(error?: ErrorLike): Error | null {\n  if (!error) {\n    return null;\n  }\n\n  const out = new Error(error.message);\n  (out as any).key = error.key;\n  return out;\n}\n\nexport function convertErrors(\n  errs?: ErrorLike[]\n): ReadonlyArray<Error | null> | null {\n  const errors = ensureArray(errs);\n  return errors ? errors.map((e) => convertError(e)) : null;\n}\n\nfunction ensureArray(e?: ErrorLike | ErrorLike[]): ErrorLike[] | null {\n  if (Array.isArray(e)) {\n    return e.length === 0 ? null : e;\n  } else if (e) {\n    return [e];\n  } else {\n    return null;\n  }\n}\n"],"mappings":";;;;;;;;;AAEO,SAASA,cAAcA,CAACC,aAAwB,EAAEC,QAAiB,EAAE;EAC1E,IACE,CAACC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,IAC7BA,aAAa,CAACI,MAAM,KAAK,CAAC,IAC1B,CAACF,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC,EAChC;IACA,MAAM,IAAIK,KAAK,CACb,gFAAgF,CACjF;EACH;EAEA,IAAIJ,QAAQ,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAE;IAC9C,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;MAC3B,MAAM,IAAII,KAAK,CACb,6IAA6I,CAC9I;IACH;IAEA,MAAM,IAAIA,KAAK,CACb,iEAAiE,CAClE;EACH;AACF;AAEO,SAASC,eAAeA,CAAA,EAAsB;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAJ,MAAA,EAAlBK,KAAK,OAAAP,KAAA,CAAAK,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;IAALD,KAAK,CAAAC,IAAA,IAAAF,SAAA,CAAAE,IAAA;EAAA;EACtC,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGH,KAAK;EAE1B,IAAI,OAAOE,GAAG,KAAK,QAAQ,EAAE;IAC3BE,OAAO,CAACC,IAAI,CACT,wBAAuB,OAAOH,GAAI,iHAAgHA,GAAI,IAAG,CAC3J;EACH;EAEA,IAAIF,KAAK,CAACL,MAAM,GAAG,CAAC,IAAI,OAAOQ,KAAK,KAAK,QAAQ,EAAE;IACjD,IAAIA,KAAK,IAAI,IAAI,EAAE;MACjB,MAAM,IAAIP,KAAK,CACZ,gJAA+IO,KAAM,iBAAgBD,GAAI,IAAG,CAC9K;IACH,CAAC,MAAM;MACLE,OAAO,CAACC,IAAI,CACT,qCAAoCH,GAAI,4GAA2GC,KAAM,iBAAgBD,GAAI,IAAG,CAClL;IACH;EACF;AACF;AAEO,SAASI,YAAYA,CAACC,KAAiB,EAAgB;EAC5D,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,MAAMC,GAAG,GAAG,IAAIZ,KAAK,CAACW,KAAK,CAACE,OAAO,CAAC;EACnCD,GAAG,CAASN,GAAG,GAAGK,KAAK,CAACL,GAAG;EAC5B,OAAOM,GAAG;AACZ;AAEO,SAASE,aAAaA,CAC3BC,IAAkB,EACkB;EACpC,MAAMC,MAAM,GAAGC,WAAW,CAACF,IAAI,CAAC;EAChC,OAAOC,MAAM,GAAGA,MAAM,CAACE,GAAG,CAAEC,CAAC,IAAKT,YAAY,CAACS,CAAC,CAAC,CAAC,GAAG,IAAI;AAC3D;AAEA,SAASF,WAAWA,CAACE,CAA2B,EAAsB;EACpE,IAAItB,KAAK,CAACC,OAAO,CAACqB,CAAC,CAAC,EAAE;IACpB,OAAOA,CAAC,CAACpB,MAAM,KAAK,CAAC,GAAG,IAAI,GAAGoB,CAAC;EAClC,CAAC,MAAM,IAAIA,CAAC,EAAE;IACZ,OAAO,CAACA,CAAC,CAAC;EACZ,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF"}