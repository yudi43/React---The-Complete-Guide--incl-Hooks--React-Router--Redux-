{"version":3,"names":["label","installationWithYarn","installationWithNpm","identifyInstallationCommand","packageManager","PACKAGE_MANAGERS","YARN","NPM","undefined","installLibrary","installationCommand","packageManagerToUse","loader","start","installationCommandArgs","split","execa","splice","succeed","error","logError","healthcheck","command","isRequired","description","getDiagnostics","needsToBeFixed","isSoftwareNotInstalled","runAutomaticFix","logManualInstallation","stop","promptQuestion","chalk","bold","reset","installWithYarn","title","value","installWithNpm","skipInstallation","chosenPackageManager","prompts","type","name","message","choices","removeMessage","fail","url","shouldInstallWithYarn","toLowerCase"],"sources":["../../../src/tools/healthchecks/iosDeploy.ts"],"sourcesContent":["import execa from 'execa';\nimport chalk from 'chalk';\nimport prompts from 'prompts';\nimport {isSoftwareNotInstalled, PACKAGE_MANAGERS} from '../checkInstallation';\nimport {packageManager} from './packageManagers';\nimport {logError, removeMessage} from './common';\nimport {HealthCheckInterface, Loader} from '../../types';\n\nconst label = 'ios-deploy';\n\nconst installationWithYarn = 'yarn global add ios-deploy';\nconst installationWithNpm = 'npm install ios-deploy --global';\n\nconst identifyInstallationCommand = () => {\n  if (packageManager === PACKAGE_MANAGERS.YARN) {\n    return installationWithYarn;\n  }\n\n  if (packageManager === PACKAGE_MANAGERS.NPM) {\n    return installationWithNpm;\n  }\n\n  return undefined;\n};\n\nconst installLibrary = async ({\n  installationCommand,\n  packageManagerToUse,\n  loader,\n}: {\n  installationCommand: string;\n  packageManagerToUse: 'yarn' | 'npm';\n  loader: Loader;\n}) => {\n  try {\n    loader.start(`${label} (installing with ${packageManagerToUse})`);\n\n    const installationCommandArgs = installationCommand.split(' ');\n\n    await execa(installationCommandArgs[0], installationCommandArgs.splice(1));\n\n    loader.succeed(`${label} (installed with ${packageManagerToUse})`);\n  } catch (error) {\n    logError({\n      healthcheck: label,\n      loader,\n      error: error as Error,\n      command: installationCommand,\n    });\n  }\n};\n\nexport default {\n  label,\n  isRequired: false,\n  description:\n    'Required for installing your app on a physical device with the CLI',\n  getDiagnostics: async () => ({\n    needsToBeFixed: await isSoftwareNotInstalled('ios-deploy'),\n  }),\n  runAutomaticFix: async ({loader, logManualInstallation}) => {\n    loader.stop();\n\n    const installationCommand = identifyInstallationCommand();\n\n    // This means that we couldn't \"guess\" the package manager\n    if (installationCommand === undefined) {\n      const promptQuestion = `ios-deploy needs to be installed either by ${chalk.bold(\n        'yarn',\n      )} ${chalk.reset('or')} ${chalk.bold(\n        'npm',\n      )} ${chalk.reset()}, which one do you want to use?`;\n      const installWithYarn = {title: 'yarn', value: 'yarn'};\n      const installWithNpm = {title: 'npm', value: 'npm'};\n      const skipInstallation = {\n        title: 'Skip installation',\n        value: 'skip',\n      };\n\n      const {chosenPackageManager} = await prompts([\n        {\n          type: 'select',\n          name: 'chosenPackageManager',\n          message: promptQuestion,\n          choices: [installWithYarn, installWithNpm, skipInstallation],\n        },\n      ]);\n\n      removeMessage(`? ${promptQuestion} ${chosenPackageManager}`);\n\n      if (\n        chosenPackageManager === skipInstallation.value ||\n        !chosenPackageManager // e.g. when user presses Esc\n      ) {\n        loader.fail();\n\n        // Then we just print out the URL that the user can head to download the library\n        logManualInstallation({\n          healthcheck: 'ios-deploy',\n          url: 'https://github.com/ios-control/ios-deploy#readme',\n        });\n\n        return;\n      }\n\n      const shouldInstallWithYarn =\n        chosenPackageManager === installWithYarn.value;\n\n      return installLibrary({\n        installationCommand: shouldInstallWithYarn\n          ? installationWithYarn\n          : installationWithNpm,\n        loader,\n        packageManagerToUse: chosenPackageManager,\n      });\n    }\n\n    return installLibrary({\n      installationCommand,\n      packageManagerToUse: packageManager!.toLowerCase() as 'yarn' | 'npm',\n      loader,\n    });\n  },\n} as HealthCheckInterface;\n"],"mappings":"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"}