{"version":3,"names":["throwIfNonHttpProtocol","url","_url","URL","urlProtocol","protocol","expectedProtocol","isFromExpectedProtocol","Error"],"sources":["../src/throwIfNonHttpProtocol.ts"],"sourcesContent":["/**\n * Check if a string is an http/https url\n */\nexport default function throwIfNonHttpProtocol(url: string) {\n  const _url = new URL(url);\n\n  const urlProtocol = _url.protocol;\n\n  const expectedProtocol = {\n    [urlProtocol]: false,\n    'http:': true,\n    'https:': true,\n  };\n\n  const isFromExpectedProtocol = expectedProtocol[urlProtocol];\n\n  if (!isFromExpectedProtocol) {\n    throw new Error('invalid url, missing http/https protocol');\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACe,SAASA,sBAAsB,CAACC,GAAW,EAAE;EAC1D,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAACF,GAAG,CAAC;EAEzB,MAAMG,WAAW,GAAGF,IAAI,CAACG,QAAQ;EAEjC,MAAMC,gBAAgB,GAAG;IACvB,CAACF,WAAW,GAAG,KAAK;IACpB,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMG,sBAAsB,GAAGD,gBAAgB,CAACF,WAAW,CAAC;EAE5D,IAAI,CAACG,sBAAsB,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;AACF"}